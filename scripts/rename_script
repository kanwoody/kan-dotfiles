#!/bin/bash
# Unlink the existing symlink for a script, rename it, and relink it to ~/bin/

readonly BIN_DIR="${HOME}/bin"
readonly SCRIPTS_DIR="${HOME}/dotfiles/scripts"

show_usage() {
  echo "┌─────────────────────────────────────────────┐"
  echo "| \$ rename_script <existing_name> <new_name>  |"
  echo "└─────────────────────────────────────────────┘"
}

main() {

  if [[ "$1" == "-h" || "$1" == "--help" ]]; then
    show_usage
    exit 0
  fi

  if [[ -z "$1" ]]; then
    echo "Existing script name not provided"
    show_usage
    exit 1
  fi

  if [[ -z "$2" ]]; then
    echo "New script name not provided"
    show_usage
    exit 1
  fi

  local existing_script_name="$1"
  local symlink="${BIN_DIR}/${existing_script_name}"
  local readlink_result
  readlink_result=$(readlink "${symlink}")
  if [[ "${readlink_result}" != "${SCRIPTS_DIR}/${existing_script_name}" ]]; then
    echo "Symbolic link does not exist at ${symlink}"
    echo "Exiting . . ."
    exit 1
  fi

  local new_script_name="$2"
  command -v "${new_script_name}" >/dev/null 2>&1
  if [[ $? -eq 0 ]]; then
    echo "\`${new_script_name}\` already exists. Try another name."
    exit 1
  fi

  local unlink_result
  unlink_result=$(
    unlink "${symlink}"
    echo $?
  )
  if [[ "${unlink_result}" -eq 1 ]]; then
    echo "Failed to unlink ${symlink}"
  fi

  mv "${SCRIPTS_DIR}/${existing_script_name}" "${SCRIPTS_DIR}/${new_script_name}"
  ln -s "${SCRIPTS_DIR}/${new_script_name}" "${BIN_DIR}/${new_script_name}"

  echo "New symlink created:"
  readlink "${BIN_DIR}/${new_script_name}"

  exit 0
}

main "$@"
